name: "Build CLI and Attach to GitHub Release"

on:
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  build:
    name: "Build CLI and Attach to GitHub Release"
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      # Setup Go
      - name: "Setup Go"
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"

      # Print Go version
      - run: go version

      # Build and release
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          version: latest
          args: release --parallelism 2 --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Get Debian Package Names
        id: deb_package
        run: |
          echo "ARM_PACKAGE=$(find dist/ -name '*arm64.deb' | head -n 1)" >> $GITHUB_ENV
          echo "AMD_PACKAGE=$(find dist/ -name '*amd64.deb' | head -n 1)" >> $GITHUB_ENV

      # Push the Debian package to Cloudsmith
      - name: Push Debian ARM package to Cloudsmith
        id: push_arm
        uses: cloudsmith-io/action@7af394e0f8add4867bce109385962dafecad1b8d # v0.6.14
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "deb"
          owner: "rosesecurity"
          repo: "terramaid"
          distro: "any-distro"
          release: "any-version"
          file: ${{ env.ARM_PACKAGE }}

      - name: Push Debian AMD package to Cloudsmith
        id: push_amd
        uses: cloudsmith-io/action@7af394e0f8add4867bce109385962dafecad1b8d # v0.6.14
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "deb"
          owner: "rosesecurity"
          repo: "terramaid"
          distro: "any-distro"
          release: "any-version"
          file: ${{ env.AMD_PACKAGE }}

  docker:
    name: "Build and Push Docker Image"
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: rosesecurity/terramaid:latest

  homebrew:
    name: "Bump Homebrew Formula"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: mislav/bump-homebrew-formula-action@8e2baa47daaa8db10fcdeb04105dfa6850eb0d68 # v3.4
        with:
          # A PR will be sent to github.com/Homebrew/homebrew-core to update this formula:
          formula-name: terramaid
          formula-path: Formula/t/terramaid.rb
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
